pipeline:
  build_book:
    image: node:8.11
    commands:
      - npm i -g gitbook-cli
      - gitbook install
      - gitbook build
  test_build:
    image: alpine:3.7
    commands:
      - cat _book/index.html
  build_image:
    image: plugins/docker
    storage_driver: overlay
    secrets: [ docker_username, docker_password ]
    repo: kontena/pharos-docs
    tags:
      - ${DRONE_BRANCH}
    when:
      branch: ['master', '0.6']
      event: ['push']
  deploy:
    image: lachlanevenson/k8s-kubectl:v1.9.6
    secrets: [ kube_token, kube_ca, kube_server ]
    commands:
      - echo $${KUBE_CA} | base64 -d > /tmp/ca.pem
      - kubectl config set-cluster default-cluster --server=$${KUBE_SERVER} --certificate-authority=/tmp/ca.pem
      - kubectl config set-credentials default-admin --token=$${KUBE_TOKEN}
      - kubectl config set-context default-system --cluster=default-cluster --user=default-admin
      - kubectl config use-context default-system
      - sed -i "s/GIT_BRANCH/${DRONE_BRANCH}/g" _deploy/template/*.yml
      - sed -i "s/BUILD_NUMBER/${DRONE_BUILD_NUMBER}/g" _deploy/template/deployment.yml
      - kubectl apply -f _deploy/template/
    when:
      branch: ['master', '0.6']
      event: ['push']
  default_ingress:
    image: lachlanevenson/k8s-kubectl:v1.9.6
    secrets: [ kube_token, kube_ca, kube_server ]
    commands:
      - echo $${KUBE_CA} | base64 -d > /tmp/ca.pem
      - kubectl config set-cluster default-cluster --server=$${KUBE_SERVER} --certificate-authority=/tmp/ca.pem
      - kubectl config set-credentials default-admin --token=$${KUBE_TOKEN}
      - kubectl config set-context default-system --cluster=default-cluster --user=default-admin
      - kubectl config use-context default-system
      - kubectl apply -f _deploy/ingress.yml
    when:
      branch: ['master']
      event: ['push']